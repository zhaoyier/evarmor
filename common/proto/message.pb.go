// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = strings.TrimPrefix

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CMessage struct {
	//
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	//
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (m *CMessage) Validate() error {
	return nil
}

func (m *CMessage) Reset()         { *m = CMessage{} }
func (m *CMessage) String() string { return proto.CompactTextString(m) }
func (*CMessage) ProtoMessage()    {}
func (*CMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *CMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMessage.Unmarshal(m, b)
}
func (m *CMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMessage.Marshal(b, m, deterministic)
}
func (m *CMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMessage.Merge(m, src)
}
func (m *CMessage) XXX_Size() int {
	return xxx_messageInfo_CMessage.Size(m)
}
func (m *CMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CMessage proto.InternalMessageInfo

func (m *CMessage) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type XMessage struct {
	//
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	//
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
	//
	Netid int64 `protobuf:"varint,3,opt,name=netid,proto3" json:"netid"`
}

func (m *XMessage) Validate() error {
	return nil
}

func (m *XMessage) Reset()         { *m = XMessage{} }
func (m *XMessage) String() string { return proto.CompactTextString(m) }
func (*XMessage) ProtoMessage()    {}
func (*XMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *XMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XMessage.Unmarshal(m, b)
}
func (m *XMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XMessage.Marshal(b, m, deterministic)
}
func (m *XMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XMessage.Merge(m, src)
}
func (m *XMessage) XXX_Size() int {
	return xxx_messageInfo_XMessage.Size(m)
}
func (m *XMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_XMessage.DiscardUnknown(m)
}

var xxx_messageInfo_XMessage proto.InternalMessageInfo

func (m *XMessage) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *XMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *XMessage) GetNetid() int64 {
	if m != nil {
		return m.Netid
	}
	return 0
}

func init() {
	proto.RegisterType((*CMessage)(nil), "proto.CMessage")
	proto.RegisterType((*XMessage)(nil), "proto.XMessage")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x04, 0x03, 0x02, 0x01, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x46, 0x5c,
	0x1c, 0xce, 0xbe, 0x10, 0x09, 0x21, 0x21, 0x2e, 0x96, 0xe4, 0xfc, 0x94, 0x54, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x30, 0x1b, 0x24, 0x96, 0x92, 0x58, 0x92, 0x28, 0xc1, 0xa4, 0xc0, 0xa8,
	0xc1, 0x13, 0x04, 0x66, 0x2b, 0x79, 0x70, 0x71, 0x44, 0x60, 0xd3, 0xc3, 0x8c, 0x5b, 0x8f, 0x90,
	0x08, 0x17, 0x6b, 0x5e, 0x6a, 0x49, 0x66, 0x8a, 0x04, 0x33, 0x58, 0x21, 0x84, 0x93, 0xc4, 0x06,
	0x76, 0x84, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xd8, 0x69, 0xda, 0x9c, 0x00, 0x00, 0x00,
}
