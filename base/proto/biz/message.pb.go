// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package biz

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = strings.TrimPrefix

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type _XServiceTypeEnum struct {
	Unknown   XServiceType
	Client    XServiceType
	Proxy     XServiceType
	Logic     XServiceType
	TotalSize int
	List      []XServiceType
	ZeroList  []XServiceType
}

var XServiceTypeEnum = _XServiceTypeEnum{
	0,
	10000,
	20000,
	30000,
	4,
	[]XServiceType{
		XServiceType_XServiceTypeClient,
		XServiceType_XServiceTypeProxy,
		XServiceType_XServiceTypeLogic,
	},
	[]XServiceType{
		XServiceType_XServiceTypeUnknown,
		XServiceType_XServiceTypeClient,
		XServiceType_XServiceTypeProxy,
		XServiceType_XServiceTypeLogic,
	},
}

func (x *_XServiceTypeEnum) Parse(short string) XServiceType {
	return XServiceType(XServiceType_value["XServiceType"+strings.TrimPrefix(short, "XServiceType")])
}

func (x XServiceType) IsUnknown() bool {
	return x == XServiceTypeEnum.Unknown
}

func (x XServiceType) GetUnknown() XServiceType {
	return XServiceTypeEnum.Unknown
}

func (x XServiceType) IsClient() bool {
	return x == XServiceTypeEnum.Client
}

func (x XServiceType) GetClient() XServiceType {
	return XServiceTypeEnum.Client
}

func (x XServiceType) IsProxy() bool {
	return x == XServiceTypeEnum.Proxy
}

func (x XServiceType) GetProxy() XServiceType {
	return XServiceTypeEnum.Proxy
}

func (x XServiceType) IsLogic() bool {
	return x == XServiceTypeEnum.Logic
}

func (x XServiceType) GetLogic() XServiceType {
	return XServiceTypeEnum.Logic
}

func (x XServiceType) Valid() bool {
	if x == XServiceType_XServiceTypeUnknown {
		return false
	}
	return x.ZeroValid()
}

func (x XServiceType) ZeroValid() bool {
	_, ok := XServiceType_name[int32(x)]
	return ok
}
func (x XServiceType) Short() string {
	n := x.String()
	typ := "XServiceType"
	if len(n) > len(typ) {
		if n[:len(typ)] == typ {
			return n[len(typ):]
		}
	}
	return n

}
func (x *XServiceType) SetValue(v int32) {
	*x = XServiceType(v)
}

func (x XServiceType) GetValue() int32 {
	return int32(x)
}

func (x *XServiceType) Type() string {
	return "XServiceType"
}

type XServiceType int32

const (
	XServiceType_XServiceTypeUnknown XServiceType = 0
	XServiceType_XServiceTypeClient  XServiceType = 10000
	XServiceType_XServiceTypeProxy   XServiceType = 20000
	XServiceType_XServiceTypeLogic   XServiceType = 30000
)

var XServiceType_name = map[int32]string{
	0:     "XServiceTypeUnknown",
	10000: "XServiceTypeClient",
	20000: "XServiceTypeProxy",
	30000: "XServiceTypeLogic",
}

var XServiceType_value = map[string]int32{
	"XServiceTypeUnknown": 0,
	"XServiceTypeClient":  10000,
	"XServiceTypeProxy":   20000,
	"XServiceTypeLogic":   30000,
}

func (x XServiceType) String() string {
	return proto.EnumName(XServiceType_name, int32(x))
}

func (XServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type CMessage struct {
	//
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	//
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (m *CMessage) Validate() error {
	return nil
}

func (m *CMessage) Reset()         { *m = CMessage{} }
func (m *CMessage) String() string { return proto.CompactTextString(m) }
func (*CMessage) ProtoMessage()    {}
func (*CMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *CMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMessage.Unmarshal(m, b)
}
func (m *CMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMessage.Marshal(b, m, deterministic)
}
func (m *CMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMessage.Merge(m, src)
}
func (m *CMessage) XXX_Size() int {
	return xxx_messageInfo_CMessage.Size(m)
}
func (m *CMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CMessage proto.InternalMessageInfo

func (m *CMessage) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type XMessage struct {
	//
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	//
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
	//
	Netid int64 `protobuf:"varint,3,opt,name=netid,proto3" json:"netid"`
}

func (m *XMessage) Validate() error {
	return nil
}

func (m *XMessage) Reset()         { *m = XMessage{} }
func (m *XMessage) String() string { return proto.CompactTextString(m) }
func (*XMessage) ProtoMessage()    {}
func (*XMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *XMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XMessage.Unmarshal(m, b)
}
func (m *XMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XMessage.Marshal(b, m, deterministic)
}
func (m *XMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XMessage.Merge(m, src)
}
func (m *XMessage) XXX_Size() int {
	return xxx_messageInfo_XMessage.Size(m)
}
func (m *XMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_XMessage.DiscardUnknown(m)
}

var xxx_messageInfo_XMessage proto.InternalMessageInfo

func (m *XMessage) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *XMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *XMessage) GetNetid() int64 {
	if m != nil {
		return m.Netid
	}
	return 0
}

type Ping struct {
	//
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names"`
}

func (m *Ping) Validate() error {
	return nil
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type Pong struct {
}

func (m *Pong) Validate() error {
	return nil
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("biz.XServiceType", XServiceType_name, XServiceType_value)
	proto.RegisterType((*CMessage)(nil), "biz.CMessage")
	proto.RegisterType((*XMessage)(nil), "biz.XMessage")
	proto.RegisterType((*Ping)(nil), "biz.Ping")
	proto.RegisterType((*Pong)(nil), "biz.Pong")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x04, 0x03, 0x02, 0x01, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0xca, 0xac, 0x52, 0x32,
	0xe2, 0xe2, 0x70, 0xf6, 0x85, 0x08, 0x0b, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x20, 0xb1, 0x94, 0xc4, 0x92, 0x44, 0x09, 0x26, 0x05,
	0x46, 0x0d, 0x9e, 0x20, 0x30, 0x5b, 0xc9, 0x83, 0x8b, 0x23, 0x82, 0x44, 0x3d, 0x42, 0x22, 0x5c,
	0xac, 0x79, 0xa9, 0x25, 0x99, 0x29, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x10, 0x8e, 0x92,
	0x0c, 0x17, 0x4b, 0x40, 0x66, 0x5e, 0x3a, 0x58, 0x36, 0x31, 0x37, 0xb5, 0x58, 0x82, 0x51, 0x81,
	0x59, 0x83, 0x33, 0x08, 0xc2, 0x51, 0x62, 0xe3, 0x62, 0x09, 0xc8, 0xcf, 0x4b, 0xd7, 0x2a, 0xe2,
	0xe2, 0x89, 0x08, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x0d, 0xa9, 0x2c, 0x48, 0x15, 0x12, 0xe7,
	0x12, 0x46, 0xe6, 0x87, 0xe6, 0x65, 0xe7, 0xe5, 0x97, 0xe7, 0x09, 0x30, 0x08, 0x89, 0x73, 0x09,
	0x21, 0x4b, 0x38, 0xe7, 0x64, 0xa6, 0xe6, 0x95, 0x08, 0x4c, 0xf0, 0x13, 0x12, 0xe7, 0x12, 0x44,
	0x96, 0x08, 0x28, 0xca, 0xaf, 0xa8, 0x14, 0x58, 0x30, 0x87, 0x11, 0x5d, 0xc2, 0x27, 0x3f, 0x3d,
	0x33, 0x59, 0x60, 0xc3, 0x2b, 0xc6, 0x24, 0x36, 0x70, 0x18, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x62, 0xa9, 0xa7, 0xf5, 0x34, 0x01, 0x00, 0x00,
}
